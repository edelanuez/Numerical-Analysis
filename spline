y = importdata('spline_data.mat');

%initializing array of dim 59 x 59 
A= zeros(59,59);
A(1,1)=2;
A(1,2)=1;

% our triadiagonal matrix

for i= 2:58
    A(i,i)=4;
    A(i,i+1)=1;
    A(i,i-1)=1;
end

A(59,59)=2;
A(59,58)=1;

% z-vector for y dimension
Z1=zeros(59,1);
Z1(1,1)=3*(y(2,2)-y(1,2));
for i= 2:58
    Z1(i,1)=3*(y(i+1,2)-y(i-1,2));
end
Z1(59,1)=3*(y(59,2)-y(58,2));

% z-vector for x dimension
Z2=zeros(59,1);
Z2(1,1)=3*(y(2,1)-y(1,1));
for i= 2:58
    Z2(i,1)=3*(y(i+1,1)-y(i-1,1));
end
Z2(59,1)=3*(y(59,1)-y(58,1));

% solve for y-dimension
D1=A\Z1;
% solve for x-dimension
D2=A\Z2;


%coefficient matrixxxx
coeff1= zeros(58,4);
coeff2= zeros(58,4);
for i= 1:58
    coeff1(i,1)= y(i,2);
    coeff1(i,2)= D1(i,1);
    coeff1(i,3)= 3*(y(i+1,2)-y(i,2))-2*D1(i,1)-D1(i+1,1);
    coeff1(i,4)= 2*(y(i,2)-y(i+1,2))+D1(i,1)+D1(i+1,1);

    coeff2(i,1)= y(i,1);
    coeff2(i,2)= D2(i,1);
    coeff2(i,3)= 3*(y(i+1,1)-y(i,1))-2*D2(i,1)-D2(i+1,1);
    coeff2(i,4)= 2*(y(i,1)-y(i+1,1))+D2(i,1)+D2(i+1,1);

end


Vx=y(:,1);
Vy=y(:,2);
figure;
for i= 1:58
    x= linspace(0,1,1/0.0001+1);

    xsum = coeff2(i,1) + coeff2(i,2).*x+coeff2(i,3).*x.^2+coeff2(i,4).*x.^3;
    ysum = coeff1(i,1) + coeff1(i,2).*x+coeff1(i,3).*x.^2+coeff1(i,4).*x.^3;
 
    plot(xsum, ysum)
    hold on
end
